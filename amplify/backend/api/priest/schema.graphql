type Location 
    @model 
    @auth(rules: [
        { allow: owner },
        { allow: groups, groups: ["admin"] }
        { allow: groups, groups: ["priest"], operations: [read] }
        { allow: groups, groups: ["secretary"], operations: [read] }
    
    ]){
    id: ID!
    name: String!
    contact: Contact @connection
}

type Contact
    @model 
    @auth(rules: [
        { allow: owner },
        { allow: groups, groups: ["admin"] }
        { allow: groups, groups: ["priest"], operations: [read] },
        { allow: groups, groups: ["secretary"], operations: [read] },
    ]) {
    id: ID!
    name: String
    phone: String
    events: [EventContacts] @connection(name: "contactk")
}

type Category
    @model 
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },
        { allow: groups, groups: ["admin"] }
        { allow: groups, groups: ["priest"], operations: [read] },
        { allow: groups, groups: ["secretary"], operations: [read] },
    ]) {
    id: ID!
    name: String
    description: String
    module: String
}

type Event
    @model
    @auth(rules: [
        # Defaults to use the "owner" field.
        { allow: owner },
        
        # Authorize the update mutation and both queries. Use `queries: null` to disable auth for queries.
        { allow: owner, ownerField: "secretary", operations: [update, read] },
        { allow: owner, ownerField: "priest", operations: [update, read] },

        # Admin users can access any operation.
        { allow: groups, groups: ["admin"] }
    ]) {
    id: ID!
    name: String
    category: Category @connection
    date: String
    description: String
    location: Location @connection
    contacts: [EventContacts] @connection(name: "eventc")
    secretary: String
    priest: String
    createdAt: String
    duration: String
}

type EventContacts @model(queries: null) {
  id: ID!
  event: Event @connection(name: "eventc")
  contact: Contact @connection(name: "contactk")
}